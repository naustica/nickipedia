version: "3.7"

services:

  postgres:
    restart: always
    image: postgres:10
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - postgres_network

  flask:
    build: ./flask
    container_name: flask
    restart: always
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - MAIL_SERVER=${MAIL_SERVER}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_DEFAULT_SENDER=${MAIL_DEFAULT_SENDER}
      - APP_SETTINGS=${APP_SETTINGS}
    expose:
      - 8080
    depends_on:
      - postgres
    networks:
      - nginx_network
      - postgres_network

  frontend:
    build: ./website
    container_name: frontend
    volumes:
      - frontend_volume:/webapp/dist

  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - frontend_volume:/webapp/dist
    depends_on:
      - flask
      - frontend
    networks:
      - nginx_network

networks:
  nginx_network:
    driver: bridge
  postgres_network:
    driver: bridge

volumes:
  postgres_volume:
  frontend_volume:
